// <auto-generated />
using System;
using DemoAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoAPI.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240228054844_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("PokemonDB")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DemoAPI.Core.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories", "PokemonDB");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c684719-e0cb-4b00-9d42-f6fe961900f8"),
                            Name = "Electric"
                        },
                        new
                        {
                            Id = new Guid("a8ab46d3-27cd-4c68-bec2-f73471d653f8"),
                            Name = "Electric"
                        },
                        new
                        {
                            Id = new Guid("361a29e0-ec56-411a-8753-4521f9088da3"),
                            Name = "Electric"
                        });
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries", "PokemonDB");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c29abc4-6a42-41b1-ac20-7c97f9d28868"),
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("9a372b12-9da7-43a1-a880-c7e35556b8c4"),
                            Name = "America"
                        },
                        new
                        {
                            Id = new Guid("d181555a-73ec-4dd5-9c77-3db18671efbb"),
                            Name = "Korea"
                        });
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Gym")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Owners", "PokemonDB");

                    b.HasData(
                        new
                        {
                            Id = new Guid("225b113e-b7e2-4407-8e24-c995b46ac9f5"),
                            CountryId = new Guid("4c29abc4-6a42-41b1-ac20-7c97f9d28868"),
                            Gym = "Pallet Town",
                            Name = "Ash Ketchup"
                        },
                        new
                        {
                            Id = new Guid("4d26f80f-4732-441f-848e-801d8db25cfc"),
                            CountryId = new Guid("9a372b12-9da7-43a1-a880-c7e35556b8c4"),
                            Gym = "Pallet Town",
                            Name = "Ash Ketchup"
                        },
                        new
                        {
                            Id = new Guid("b690f3c2-5502-4035-967f-a808a30e4727"),
                            CountryId = new Guid("d181555a-73ec-4dd5-9c77-3db18671efbb"),
                            Gym = "Pallet Town",
                            Name = "Ash Ketchup"
                        });
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Pokemon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Pokemons", "PokemonDB");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0387583-aead-4460-a86b-0bf82c2bd518"),
                            BirthDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pikachu"
                        },
                        new
                        {
                            Id = new Guid("099c7edc-4e2c-4e6d-bc04-141c1549399a"),
                            BirthDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pikachu"
                        },
                        new
                        {
                            Id = new Guid("799a8b34-c056-41fe-8ac2-ef4d906ad1dd"),
                            BirthDate = new DateTime(1996, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pikachu"
                        });
                });

            modelBuilder.Entity("DemoAPI.Core.Models.PokemonCategory", b =>
                {
                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PokemonId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("PokemonCategories", "PokemonDB");

                    b.HasData(
                        new
                        {
                            PokemonId = new Guid("c0387583-aead-4460-a86b-0bf82c2bd518"),
                            CategoryId = new Guid("8c684719-e0cb-4b00-9d42-f6fe961900f8")
                        },
                        new
                        {
                            PokemonId = new Guid("099c7edc-4e2c-4e6d-bc04-141c1549399a"),
                            CategoryId = new Guid("a8ab46d3-27cd-4c68-bec2-f73471d653f8")
                        },
                        new
                        {
                            PokemonId = new Guid("799a8b34-c056-41fe-8ac2-ef4d906ad1dd"),
                            CategoryId = new Guid("361a29e0-ec56-411a-8753-4521f9088da3")
                        });
                });

            modelBuilder.Entity("DemoAPI.Core.Models.PokemonOwner", b =>
                {
                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PokemonId", "OwnerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("PokemonOwners", "PokemonDB");

                    b.HasData(
                        new
                        {
                            PokemonId = new Guid("c0387583-aead-4460-a86b-0bf82c2bd518"),
                            OwnerId = new Guid("225b113e-b7e2-4407-8e24-c995b46ac9f5")
                        },
                        new
                        {
                            PokemonId = new Guid("099c7edc-4e2c-4e6d-bc04-141c1549399a"),
                            OwnerId = new Guid("4d26f80f-4732-441f-848e-801d8db25cfc")
                        },
                        new
                        {
                            PokemonId = new Guid("799a8b34-c056-41fe-8ac2-ef4d906ad1dd"),
                            OwnerId = new Guid("b690f3c2-5502-4035-967f-a808a30e4727")
                        });
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews", "PokemonDB");

                    b.HasData(
                        new
                        {
                            Id = new Guid("beb8539c-6cef-48b7-94a1-e52ab0c9968f"),
                            PokemonId = new Guid("c0387583-aead-4460-a86b-0bf82c2bd518"),
                            ReviewerId = new Guid("348597e8-7342-420f-be37-1e3154e4547a"),
                            Text = "Not good at all",
                            Title = "Nothing is good about this game"
                        },
                        new
                        {
                            Id = new Guid("f3154f60-9c51-4f21-a166-5ff27b910e70"),
                            PokemonId = new Guid("099c7edc-4e2c-4e6d-bc04-141c1549399a"),
                            ReviewerId = new Guid("0219db36-6f9b-42d0-b8f6-e1b05a7d8d09"),
                            Text = "Great Game",
                            Title = "Big Hit"
                        },
                        new
                        {
                            Id = new Guid("871b10c5-f75d-4c44-ad48-a073ada97850"),
                            PokemonId = new Guid("799a8b34-c056-41fe-8ac2-ef4d906ad1dd"),
                            ReviewerId = new Guid("de791aa3-7df5-4c18-9f6c-c6b57132c80c"),
                            Text = "This game is really bad !",
                            Title = "Bad Game"
                        });
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Reviewer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Reviewers", "PokemonDB");

                    b.HasData(
                        new
                        {
                            Id = new Guid("348597e8-7342-420f-be37-1e3154e4547a"),
                            FirstName = "Master",
                            LastName = "Pikachu"
                        },
                        new
                        {
                            Id = new Guid("0219db36-6f9b-42d0-b8f6-e1b05a7d8d09"),
                            FirstName = "Master",
                            LastName = "Rayquaza"
                        },
                        new
                        {
                            Id = new Guid("de791aa3-7df5-4c18-9f6c-c6b57132c80c"),
                            FirstName = "Master",
                            LastName = "Charmander"
                        });
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Owner", b =>
                {
                    b.HasOne("DemoAPI.Core.Models.Country", "Country")
                        .WithMany("Owners")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DemoAPI.Core.Models.PokemonCategory", b =>
                {
                    b.HasOne("DemoAPI.Core.Models.Category", "Category")
                        .WithMany("PokemonCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoAPI.Core.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonCategories")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("DemoAPI.Core.Models.PokemonOwner", b =>
                {
                    b.HasOne("DemoAPI.Core.Models.Owner", "Owner")
                        .WithMany("PokemonOwners")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoAPI.Core.Models.Pokemon", "Pokemon")
                        .WithMany("PokemonOwners")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Review", b =>
                {
                    b.HasOne("DemoAPI.Core.Models.Pokemon", "Pokemon")
                        .WithMany("Reviews")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemoAPI.Core.Models.Reviewer", "Reviewer")
                        .WithMany("Reviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Category", b =>
                {
                    b.Navigation("PokemonCategories");
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Country", b =>
                {
                    b.Navigation("Owners");
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Owner", b =>
                {
                    b.Navigation("PokemonOwners");
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Pokemon", b =>
                {
                    b.Navigation("PokemonCategories");

                    b.Navigation("PokemonOwners");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("DemoAPI.Core.Models.Reviewer", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
